// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchain_service.proto

/*
Package services is a generated protocol buffer package.

It is generated from these files:
	blockchain_service.proto

It has these top-level messages:
	TXInput
	TXOutput
	Transaction
	Block
*/
package services

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TXInput struct {
	Txid      []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout      int32  `protobuf:"varint,2,opt,name=vout" json:"vout,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	PubKey    []byte `protobuf:"bytes,4,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (m *TXInput) Reset()                    { *m = TXInput{} }
func (m *TXInput) String() string            { return proto.CompactTextString(m) }
func (*TXInput) ProtoMessage()               {}
func (*TXInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TXInput) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *TXInput) GetVout() int32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *TXInput) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *TXInput) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

type TXOutput struct {
	Value      int32  `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	PubKeyHash []byte `protobuf:"bytes,2,opt,name=pub_key_hash,json=pubKeyHash,proto3" json:"pub_key_hash,omitempty"`
}

func (m *TXOutput) Reset()                    { *m = TXOutput{} }
func (m *TXOutput) String() string            { return proto.CompactTextString(m) }
func (*TXOutput) ProtoMessage()               {}
func (*TXOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TXOutput) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TXOutput) GetPubKeyHash() []byte {
	if m != nil {
		return m.PubKeyHash
	}
	return nil
}

type Transaction struct {
	ID   []byte      `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Vin  []*TXInput  `protobuf:"bytes,2,rep,name=vin" json:"vin,omitempty"`
	Vout []*TXOutput `protobuf:"bytes,3,rep,name=vout" json:"vout,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Transaction) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *Transaction) GetVin() []*TXInput {
	if m != nil {
		return m.Vin
	}
	return nil
}

func (m *Transaction) GetVout() []*TXOutput {
	if m != nil {
		return m.Vout
	}
	return nil
}

type Block struct {
	Timestamp     int64          `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Transactions  []*Transaction `protobuf:"bytes,2,rep,name=transactions" json:"transactions,omitempty"`
	PrevBlockHash []byte         `protobuf:"bytes,3,opt,name=prev_block_hash,json=prevBlockHash,proto3" json:"prev_block_hash,omitempty"`
	Hash          []byte         `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	Nonce         []byte         `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Height        int32          `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Block) GetPrevBlockHash() []byte {
	if m != nil {
		return m.PrevBlockHash
	}
	return nil
}

func (m *Block) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Block) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Block) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterType((*TXInput)(nil), "services.TXInput")
	proto.RegisterType((*TXOutput)(nil), "services.TXOutput")
	proto.RegisterType((*Transaction)(nil), "services.Transaction")
	proto.RegisterType((*Block)(nil), "services.Block")
}

func init() { proto.RegisterFile("blockchain_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0x4d, 0x6b, 0xeb, 0x30,
	0x10, 0xc4, 0x76, 0xec, 0xe4, 0x6d, 0xfc, 0xde, 0xa3, 0xa2, 0x1f, 0xa2, 0xe4, 0x60, 0x5c, 0x08,
	0x39, 0x25, 0xd0, 0x9e, 0x7a, 0x0d, 0x39, 0x24, 0xb4, 0x50, 0x30, 0x81, 0xe6, 0x66, 0x64, 0x57,
	0xd8, 0x6a, 0x12, 0xc9, 0x58, 0xb2, 0x69, 0xfe, 0x4e, 0x7f, 0x4e, 0x7f, 0x55, 0x91, 0xe4, 0xe2,
	0xf4, 0xb6, 0x3b, 0x3b, 0xd2, 0xec, 0xcc, 0x02, 0xce, 0x0e, 0x22, 0xdf, 0xe7, 0x25, 0x61, 0x3c,
	0x95, 0xb4, 0x6e, 0x59, 0x4e, 0xe7, 0x55, 0x2d, 0x94, 0x40, 0xa3, 0xae, 0x95, 0xb7, 0x93, 0x42,
	0x88, 0xe2, 0x40, 0x17, 0xa4, 0x62, 0x0b, 0xc2, 0xb9, 0x50, 0x44, 0x31, 0xc1, 0xa5, 0xe5, 0xc5,
	0x25, 0x0c, 0xb7, 0xbb, 0x0d, 0xaf, 0x1a, 0x85, 0x10, 0x0c, 0xd4, 0x07, 0x7b, 0xc3, 0x4e, 0xe4,
	0xcc, 0xc2, 0xc4, 0xd4, 0x1a, 0x6b, 0x45, 0xa3, 0xb0, 0x1b, 0x39, 0x33, 0x3f, 0x31, 0x35, 0x9a,
	0xc0, 0x1f, 0xc9, 0x0a, 0x4e, 0x54, 0x53, 0x53, 0xec, 0x19, 0x72, 0x0f, 0xa0, 0x1b, 0x18, 0x56,
	0x4d, 0x96, 0xee, 0xe9, 0x09, 0x0f, 0xcc, 0x2c, 0xa8, 0x9a, 0xec, 0x89, 0x9e, 0xe2, 0x25, 0x8c,
	0xb6, 0xbb, 0x97, 0x46, 0x69, 0xa9, 0x4b, 0xf0, 0x5b, 0x72, 0x68, 0xa8, 0xd1, 0xf2, 0x13, 0xdb,
	0xa0, 0x08, 0xc2, 0xee, 0x69, 0x5a, 0x12, 0x59, 0x1a, 0xd1, 0x30, 0x01, 0xfb, 0x7e, 0x4d, 0x64,
	0x19, 0xbf, 0xc3, 0x78, 0x5b, 0x13, 0x2e, 0x49, 0xae, 0x3d, 0xa0, 0x7f, 0xe0, 0x6e, 0x56, 0xdd,
	0xbe, 0xee, 0x66, 0x85, 0xee, 0xc0, 0x6b, 0x19, 0xc7, 0x6e, 0xe4, 0xcd, 0xc6, 0xf7, 0x17, 0xf3,
	0x9f, 0x08, 0xe6, 0x9d, 0xc3, 0x44, 0x4f, 0xd1, 0xb4, 0xb3, 0xe4, 0x19, 0x16, 0x3a, 0x67, 0xd9,
	0xed, 0xac, 0xcd, 0xf8, 0xcb, 0x01, 0x7f, 0xa9, 0xe3, 0xd5, 0x86, 0x15, 0x3b, 0x52, 0xa9, 0xc8,
	0xb1, 0x32, 0x6a, 0x5e, 0xd2, 0x03, 0xe8, 0x11, 0x42, 0xd5, 0xef, 0x24, 0x3b, 0xf5, 0xab, 0xb3,
	0x7f, 0xfb, 0x69, 0xf2, 0x8b, 0x8a, 0xa6, 0xf0, 0xbf, 0xaa, 0x69, 0x9b, 0x9a, 0x2b, 0x5a, 0xcf,
	0x36, 0xcf, 0xbf, 0x1a, 0x36, 0xe2, 0xda, 0xb6, 0xbe, 0x82, 0x19, 0xda, 0x40, 0x4d, 0xad, 0x23,
	0xe4, 0x82, 0xe7, 0x14, 0xfb, 0x06, 0xb4, 0x0d, 0xba, 0x86, 0xa0, 0xa4, 0xac, 0x28, 0x15, 0x0e,
	0x4c, 0xb2, 0x5d, 0xb7, 0x0c, 0x3e, 0x5d, 0x6f, 0xfd, 0xfc, 0x9a, 0x05, 0xe6, 0xea, 0x0f, 0xdf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x11, 0x6d, 0x3d, 0xb6, 0x39, 0x02, 0x00, 0x00,
}
